const checkout      = require('./applications/checkout.app')
const application   = require('./infrastructure/app')
const errorHandler  = require('./infrastructure/error-handler')
const eventstore    = require('./infrastructure/eventstore')
const logger        = require('./infrastructure/logger')
const commandBus    = require('./infrastructure/command-bus')
const reducer       = require('./infrastructure/reducer')
const repository    = require('./infrastructure/repository')
const projector     = require('./infrastructure/projector')
const messaging     = require('./infrastructure/messaging')

application()
    .then(app => app.configure(eventstore))
    .then(app => app.configure(messaging))
    .then(app => app.configure(checkout({ commandBus, reducer, repository, projector })))
    .then(app => app.configure(errorHandler))
    .then(app => ({app,  service: app.listen(app.param('port'))}))
    .then(({app, service}) => service.on('listening', () => app.info('"booking service" has started', { host: app.param('host'), port: app.param('port') })))
    .catch( error => logger.error('Error during boot sequence', error) )
